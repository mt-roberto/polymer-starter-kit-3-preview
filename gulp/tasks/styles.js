require('../utils/requires.js');

/* globals gulp */
/* globals config */
/* globals modified */
/* globals runSequence */
/* globals autoprefixer */
/* globals sass */
/* globals tap */
/* globals cssnano */
/* globals gulpif */
/* globals isDevBuild */

const AUTOPREFIXER_BROWSERS = config.autoprefixer;

const YEAR = new Date().getFullYear();

const COPYRIGHT =  '/*\n' +
                   '@license\n' +
                   'Copyright (c) {{year}} The Polymer Project Authors. All ' +
                   'rights reserved.\n' +
                   'This code may only be used under the BSD style license ' +
                   'found at http://polymer.github.io/LICENSE.txt\n' +
                   'The complete set of authors may be found at http://' +
                   'polymer.github.io/AUTHORS.txt\n' +
                   'The complete set of contributors may be found at http://' +
                   'polymer.github.io/CONTRIBUTORS.txt\n' +
                   'Code distributed by Google as part of the polymer ' +
                   'project is also\n' +
                   'subject to an additional IP rights grant found at ' +
                   'http://polymer.github.io/PATENTS.txt\n' +
                   '*/\n'

const PREFIX =  '/* DO NOT EDIT - this file is generated by a script */\n';

const bundleSass = (file) => {
  let content = file.contents.toString();
  const regexYear = new RegExp('{{year}}', 'gi');

  content = COPYRIGHT + PREFIX + content;
  content = content.replace(regexYear, YEAR);

  return content;
}

// Global sass compilation.
gulp.task('sass:styles', (callback) => {

  return gulp.src(config.path.srcGlobalSass + '/**/*.scss')
             .pipe(modified('sass:styles'))
             .pipe(sass())
             .pipe(autoprefixer(AUTOPREFIXER_BROWSERS))
             .pipe(gulpif(!isDevBuild, cssnano()))
             .pipe(tap((file) => {
               file.contents = new Buffer(bundleSass(file));
             }))
             .pipe(gulp.dest(config.path.destGlobalCss));
});
